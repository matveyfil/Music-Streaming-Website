services:
  catalog:
    build:
      context: ./Catalog
    image: maflus/catalog:latest
    container_name: catalog-container
    environment:
    - SECRET_KEY=${SECRET_KEY}
    ports:
      - "5001:5000"
    volumes:
      - ./UploadSong/static/songs:/app/static/songs
    networks:
      - microservices-network

  register-login:
    build:
      context: ./Register
    image: maflus/register-login:latest
    container_name: register-login-container
    environment:
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "5003:5000"
    networks:
      - microservices-network

  upload-song:
    build:
      context: ./UploadSong
    image: maflus/upload-song:latest
    container_name: upload-song-container
    ports:
      - "5004:5000"
    volumes:
      - ./UploadSong/static/songs:/app/static/songs
    networks:
      - microservices-network

  songs-history:
    image: maflus/songs-history:latest
    container_name: songs-history-container
    ports:
      - "5005:5000"
    networks:
      - microservices-network
  
  home-page:
    image: maflus/home-page:latest
    container_name: home-page-container
    ports:
      - "5000:5000"
    networks:
      - microservices-network

  redis-db:
    image: redis:alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - microservices-network
  
  gateway:
    image: nginx:latest
    container_name: gateway-container
    ports:
      - "85:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - microservices-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # without passwords
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data   # persistent storage
    networks:
      - microservices-network
      
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - microservices-network

  fluent-bit:
    image: fluent/fluent-bit:2.1
    container_name: fluent-bit
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  es_data:
